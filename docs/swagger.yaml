basePath: /api
definitions:
  comment.Comment:
    properties:
      attachment:
        type: string
      body:
        type: string
      created_at:
        type: string
      dislike_count:
        type: integer
      id:
        type: string
      like_count:
        type: integer
      moderated_by:
        type: string
      parent_id:
        type: string
      post_id:
        type: string
      updated_at:
        type: string
    type: object
  comment.InsertCommentReq:
    properties:
      attachment:
        type: string
      body:
        type: string
      parent_id:
        type: string
    type: object
  comment.InsertCommentRes:
    properties:
      data:
        $ref: '#/definitions/comment.Comment'
      message:
        type: string
      metadata:
        type: object
      status:
        type: string
    type: object
  comment.ListCommentRes:
    properties:
      data:
        items:
          $ref: '#/definitions/comment.Comment'
        type: array
      message:
        type: string
      metadata:
        type: object
      status:
        type: string
    type: object
  utils.ErrorRes:
    properties:
      error_code:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a backend for Talkbox comment system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Talkbox
  version: "1.0"
paths:
  /comments:
    get:
      consumes:
      - application/json
      description: Get all avaiable comments within list
      parameters:
      - description: Comment data in page
        in: query
        name: page
        type: string
      - description: Limit data per request
        in: query
        name: limit
        type: string
      - description: Search query for comment
        in: query
        name: search_query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comment.ListCommentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorRes'
      summary: Get all comments
      tags:
      - comments
  /comments/{post_id}:
    post:
      consumes:
      - application/json
      description: create a new comment based on post slug
      parameters:
      - description: Post identifier
        in: path
        name: post_id
        required: true
        type: string
      - description: Insert comment request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/comment.InsertCommentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/comment.InsertCommentRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorRes'
      summary: Insert a new comment
      tags:
      - comments
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"

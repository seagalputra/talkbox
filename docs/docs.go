// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comments/{post_id}": {
            "post": {
                "description": "create a new comment based on post slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Insert a new comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post identifier",
                        "name": "post_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Insert comment request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.InsertCommentReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/comment.InsertCommentRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorRes"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "comment.InsertCommentReq": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "comment.InsertCommentRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "attachment": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "dislike_count": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "string"
                        },
                        "like_count": {
                            "type": "integer"
                        },
                        "parent_id": {
                            "type": "string"
                        },
                        "post_id": {
                            "type": "string"
                        },
                        "updated_at": {
                            "type": "string"
                        }
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "utils.ErrorRes": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Talkbox",
	Description:      "This is a backend for Talkbox comment system.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
